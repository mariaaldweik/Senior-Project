module keypadd(keypad,hex1,hex2,hex3,oparation);
input [7:0] keypad;
output reg [5:0] oparation;
output reg [6:0] hex1,hex2,hex3;
always @ (keypad)
begin
		case (keypad)
		      8'b00010100: hex1 <= 7'b0000001; //0
		   	8'b10001000: hex1 <= 7'b1001111; //1
		   	8'b10000100: hex1 <= 7'b0010010; //2
		   	8'b10000010: hex1 <= 7'b0000110; //3
		   	8'b01001000: hex1 <= 7'b1001100; //4
		   	8'b01000100: hex1 <= 7'b0100100; //5
		   	8'b01000010: hex1 <= 7'b0100000; //6
		   	8'b00101000: hex1 <= 7'b0001111; //7
		   	8'b00100100: hex1 <= 7'b0000000; //8
		   	8'b00100010: hex1 <= 7'b0000100; //9
		   
		
		endcase
     if(keypad==8'b00010010)   //#	
       begin
                   case (keypad)
            8'b10000001: begin
				oparation = 5'b000010; 
				hex2  = 7'b0001000;  // x+y A
				end
		   	8'b01000001:begin
				oparation = 5'b010011; 
				hex2  = 7'b1100000; 	// x-y   B
				end
		   	8'b01000001: begin oparation = 5'b010101; hex2  = 7'b0110001; end // x|y   C 
		   	8'b00100001: begin oparation = 5'b000000; hex2  = 7'b1000010;  end// x&y   D
                   endcase
      end
   if(keypad==8'b00011000 )  //*
       begin
                   case (keypad)
            8'b00010100: hex3 = 7'b0000001;  //0
		   	8'b10001000: hex3 = 7'b1001111; //1
		   	8'b10000100: hex3 = 7'b0010010; //2
		   	8'b10000010: hex3 = 7'b0000110; //3
		   	8'b01001000: hex3 = 7'b1001100; //4
		   	8'b01000100: hex3 = 7'b0100100; //5
		   	8'b01000010: hex3 = 7'b0100000; //6
		   	8'b00101000: hex3 = 7'b0001111; //7
		   	8'b00100100: hex3 = 7'b0000000; //8
		   	8'b00100010: hex3 = 7'b0000100; //9
                   endcase
      end

end

endmodule


         
