@50
D=A; nul
@30
M=D; nul
@51
D=A; nul
@31
M=D; nul
@124
D=A; nul
@35
M=D; nul
@57
D=A; nul
@38
M=D; nul
@57
D=A; nul
@39
M=D; nul
@30 //First_num
D=M; nul
@to second digit
nul=D; JEQ
@48
D=A; nul
@30
D=M-D; nul
@40
M=D; nul
@10
D=A; nul
@2
M=D; nul
@0
D=A; nul
@80
M=D; nul
@40 //line x
D=M; nul
@80
M=D+M; nul
@2
MD=M-1; nul
@line x
D=D; JGT
@80
D=M; nul
@40
M=D; nul
@48 //second digit
D=A; nul
@31
D=M-D; nul
@40
M=D+M; nul
@38 //Second_num
D=M; nul
@to second digit
nul=D; JEQ
@48
D=A; nul
@38
D=M-D; nul
@41
M=D; nul
@10
D=A; nul
@3
M=D; nul
@0
D=A; nul
@81
M=D; nul
@41 //line x
D=M; nul
@81
M=D+M; nul
@3
MD=M-1; nul
@line x
D=D; JGT
@81
D=M; nul
@41
M=D; nul
@48//second digit
D=A; nul
@39
D=M-D; nul
@41
M=D+M; nul
@#Done operation_do_"+"
D=A; nul
@71
M=D; nul
@#Check_next1
D=A; nul
@72
M=D; nul
@35
D=A; nul
@70
M=D; nul
@Check (+) operation
nul=D; JMP
@#Done operation_do_"-"
D=A; nul
@71
M=D; nul
@#Check_next2
D=A; nul
@72
M=D; nul
@35
D=A; nul
@70
M=D; nul
@Check (-) operation
nul=D; JMP
@#Done operation_do_"&"
D=A; nul
@71
M=D; nul
@#Check_next3
D=A; nul
@72
M=D; nul
@35
D=A; nul
@70
M=D; nul
@Check (&) operation
nul=D; JMP
@#Done operation_do_"|"
D=A; nul
@71
M=D; nul
@#Check_next4
D=A; nul
@72
M=D; nul
@35
D=A; nul
@70
M=D; nul
@Check (|) operation
nul=D; JMP
@#Done operation_do_"*"
D=A; nul
@71
M=D; nul
@0
D=A; nul
@72
M=D; nul
@35
D=A; nul
@70
M=D; nul
@Check (*) operation
nul=D; JMP
@40
D=M; nul
@41
D=D+M; nul
@50
M=D; nul
@convert Decimal to ASCII
nul=D; JMP
@40
D=M; nul
@41
D=D-M; nul
@50
M=D; nul
@convert Decimal to ASCII
nul=D; JMP
@40
D=M; nul
@41
D=D&M; nul
@50
M=D; nul
@convert Decimal to ASCII
nul=D; JMP
@40
D=M; nul
@41
D=D|M; nul
@50
M=D; nul
@convert Decimal to ASCII
nul=D; JMP
@41
D=M; nul
@85
M=D; nul
@40 //line x
D=M; nul
@50
M=D+M; nul
@85
MD=M-1; nul
@x
D=D; JGT
@convert Decimal to ASCII
nul=D; JMP
@10
D=A; nul
@50
D=M-D; nul
@#Convert_Decimal_to_Ascii
D=D; JLT
@100
D=A; nul
@50
D=M-D; nul
@#separate_2_Digit
D=D; JLT
@1000
D=A; nul
@50
D=M-D; nul
@#separate_3_Digit
D=D; JLT
@48 //#Convert_Decimal_to_Ascii
D=A; nul
@50
D=D+M; nul
@60
M=D; nul
@//reset all items
nul=D; JMP
@0
D=A; nul
@60
M=!D; nul
@60 //x
M=M+1; nul
@10
D=A; nul
@50
MD=M-D; nul
@x
nul=D; JGT
@48
D=A; nul
@60
M=D+M; nul
@10
D=A; nul
@50
D=D+M; nul
@48
D=D+A; nul
@61
M=D; nul
@//reset all items
nul=D; JMP
@0
D=A; nul
@60
M=!D; nul
@60 //x
M=M+1; nul
@100
D=A; nul
@50
MD=M-D; nul
@x
nul=D; JGT
@48
D=A; nul
@60
M=D+M; nul
@100
D=A; nul
@50
M=D+M; nul
@0
D=A; nul
@61
M=!D; nul
@61 //x
M=M+1; nul
@10
D=A; nul
@50
MD=M-D; nul
@x
nul=D; JGT
@48
D=A; nul
@61
M=D+M; nul
@10
D=A; nul
@50
D=D+M; nul
@48
D=D+A; nul
@62
M=D; nul
@//reset all items
nul=D; JMP
@43 //if statement for "+"
D=A; nul
@70
A=M; nul
D=M; nul
D=!D; nul
@43
D=D&A; nul
@1
M=D; nul
@70
A=M; nul
D=M; nul
@43
A=!A; nul
D=D&A; nul
@2
M=D; nul
@1
A=M; nul
D=D|A; nul
@71
A=M; nul
D=D; JEQ
@72
A=M; nul
nul=A; JMP
@95 //if statement for "-"
D=A; nul
@70
A=M; nul
D=M; nul
D=!D; nul
@95
D=D&A; nul
@1
M=D; nul
@70
A=M; nul
D=M; nul
@95
A=!A; nul
D=D&A; nul
@2
M=D; nul
@1
A=M; nul
D=D|A; nul
@71
A=M; nul
D=D; JEQ
@72
A=M; nul
nul=A; JMP
@38 //if statement for "&"
D=A; nul
@70
A=M; nul
D=M; nul
D=!D; nul
@38
D=D&A; nul
@1
M=D; nul
@70
A=M; nul
D=M; nul
@38
A=!A; nul
D=D&A; nul
@2
M=D; nul
@1
A=M; nul
D=D|A; nul
@71
A=M; nul
D=D; JEQ
@72
A=M; nul
nul=A; JMP
@124 //if statement for "|"
D=A; nul
@70
A=M; nul
D=M; nul
D=!D; nul
@124
D=D&A; nul
@1
M=D; nul
@70
A=M; nul
D=M; nul
@124
A=!A; nul
D=D&A; nul
@2
M=D; nul
@1
A=M; nul
D=D|A; nul
@71
A=M; nul
D=D; JEQ
@72
A=M; nul
nul=A; JMP
@42 //if statement for "*"
D=A; nul
@70
A=M; nul
D=M; nul
D=!D; nul
@42
D=D&A; nul
@1
M=D; nul
@70
A=M; nul
D=M; nul
@42
A=!A; nul
D=D&A; nul
@2
M=D; nul
@1
A=M; nul
D=D|A; nul
@71
A=M; nul
D=D; JEQ
@72
A=M; nul
nul=A; JMP
@0 //reset all mem used
D=A; nul
@1
M=D; nul
@2
M=D; nul
@3
M=D; nul
@30
M=D; nul
@31
M=D; nul
@35
M=D; nul
@38
M=D; nul
@39
M=D; nul
@40
M=D; nul
@41
M=D; nul
@50
M=D; nul
@60
M=D; nul
@61
M=D; nul
@70
M=D; nul
@71
M=D; nul
@72
M=D; nul
@80
M=D; nul
@81
M=D; nul
@loop
null=D; JMP
